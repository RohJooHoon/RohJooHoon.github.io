<style>
  .td-center {
    text-align: center;
  }
</style>

<!-- 페이지 타이틀 -->
<div class="page-breadcrumb">
    <div class="row">
        <div class="col">
            <h2 class="page-title text-dark">스티커 세트 필터 수정</h2>
        </div>
    </div>
</div>
<!-- 페이지 컨텐츠 -->
<form class="container-fluid" enctype="multipart/form-data" method="post" id="insertForm">

    <!-- 상세 템플릿 -->
    <div class="row">
        <div class="col-lg-12">
            <div class="card shadow">
                <div class="card-header py-2">
                    <div class="row">
                        <div class="col py-1">
                            <h5 class="font-weight-bold mb-1">필터</h5>
                            <h6 class="m-0">스티커 세트 필터 수정</h6>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="filter_name">이름<span class="text-danger ml-05">*</span></label>
                        </div>
                        <input class="form-control is_impotent" id="filter_name" type="text" name="filter_name" placeholder="필터 이름을 넣어주세요">
                    </div>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="filter_type">타입<span class="text-danger ml-05">*</span></label>
                        </div>
                        <div class="input-groupWrapBody listContentsFormGroup_inputBD is_full">
                            <select class="custom-select" name="filter_type" id="filter_type">
                                <option value="STICKER_SET" DISABLED>스티커 세트</option>
                            </select>
                        </div>
                    </div>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="filter_name">상태<span class="text-danger ml-05">*</span></label>
                        </div>
                        <div class="input-groupWrapBody listContentsFormGroup_inputBD is_inner">
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="status" id="status_01" value="01" checked>
                                <label class="form-check-label" for="status_01">활성</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" name="status" id="status_02" value="99">
                                <label class="form-check-label" for="status_02">비활성</label>
                            </div>
                        </div>
                    </div>
                    <div class="input-group mb-3">
                        <div class="input-group-prepend">
                            <label class="input-group-text" for="">스티커 세트 관리</label>
                        </div>
                        <div class="input-groupWrapBody listContentsFormGroup_inputBD is_inner">
                            <input type="button" class="btn btn-outline-dark" value="스티커 필터 매핑 정보 조회."
                                   onclick="getUnitStickerFilterMappingList()">
                        </div>
                    </div>
                    <div>
                        <input type="hidden" id="filter_seq">
                    </div>
                    <div class="button-group">
                        <button type="button" class="btn btn-success float-right" onclick="updateUnitStickerFilter()">수정 하기</button>
                        <button type="button" class="btn btn-success float-right" onclick="location.href='/view/sticker/stickerFilterList'">
                            필터 목록
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- //상세 템플릿 -->
</form>
<script type="text/javascript">
  $(document).ready(function () {
    initUnitStickerFilter();
  });

  function initUnitStickerFilter() {

    const unit_sticker_filter_seq = getUrlParams().unit_sticker_filter_seq;

    $.ajax({
      type: "GET",
      url: `${admin_api_url}/units/stickers/filters/${unit_sticker_filter_seq}`,
      success: function (res) {
        $("#filter_name").val(res.filter_name);
        $("#filter_type").val(res.filter_type);
        $(`input[name=status][value="${res.status}"]`).attr('checked', true);
      },
      error: function (error) {
        console.log("에러 ::::", error);
      }
    });
  }

  function updateUnitStickerFilter() {

    const unit_sticker_filter_seq = getUrlParams().unit_sticker_filter_seq;

    const sendData = {
      "unit_sticker_filter_seq": unit_sticker_filter_seq,
      "filter_name": $("#filter_name").val(),
      "filter_type": $("#filter_type").val(),
      "status": $('input[name="status"]:checked').val()
    };

    $.ajax({
      type: "PUT",
      url: `${admin_api_url}/units/stickers/filters`,
      data: JSON.stringify(sendData),
      contentType: "application/json",
      success: function (res) {
        alert("유닛 스티커 필터 수정이 정상적으로 완료되었습니다.");
        location.href = "/view/sticker/stickerFilterList";
      },
      error: function (error) {
        console.log("에러 :::: ", error);
      }
    });

  }

  // 필수 입력 유효성 검사.
  function checkImpotent() {

    $is_impotent = $(".is_impotent");

    for (let i = 0; i < $is_impotent.length; i++) {

      let $target = $is_impotent.eq(i);

      if ($target.is('input')) {
        if (!$target.val()) {
          alert("필터 이름을 입력해주세요.");
          $target.focus();
          return false;
        }
      }

    }

    return true;
  }

  // 해당 필터와 매핑된 스티커 리스트 조회.
  function getUnitStickerFilterMappingList() {

    let html = `
        <div class="table-responsive">
        <table class="unitStickerList table-bordered" id="dataTable" style="width: 100%;">
            <thead>
            <tr>
                <th class="text-dark font-weight-bold">번호</th>
                <th class="text-dark font-weight-bold">이름</th>
                <th class="text-dark font-weight-bold">이미지</th>
                <th class="text-dark font-weight-bold">삭제</th>
            </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>`;

    openPopup({
      type: 'EDIT',
      title: '스티커 세트 매핑 리스트.',
      html: html,
      maxWidth: '1000px',
    }, true);

    drawMappingDataList();
  }

  function drawMappingDataList() {

    const unit_sticker_filter_seq = getUrlParams().unit_sticker_filter_seq;

    const sendData = {
      "unit_sticker_filter_seq": unit_sticker_filter_seq
    }

    $(".unitStickerList").dataTable().fnDestroy()
    $('.unitStickerList').DataTable({
      "processing": true,
      "stateSave": true,
      "serverSide": true,
      "lengthChange": false,
      "info": false,
      "searching": false,
      "ajax": {
        url: `${admin_api_url}/units/stickers/filters/set`,
        data: sendData,
        dataSrc: function (response) {
          console.log("응답 : ", response);
          return response.data;
        }
      },
      "columnDefs": [
        {
          "className": "td-center",
          "render": function (data, type, row) {
            return row.unit_sticker_seq;
          },
          "targets": 0
        },
        {
          "className": "td-center",
          "render": function (data, type, row) {
            return `<a href="/view/sticker/modify?unit_sticker_seq=${row.unit_sticker_seq}" target="_blank"/>${row.name}</a><br/>`;
          },
          "targets": 1
        },
        {
          "className": "td-center",
          "render": function (data, type, row) {
            return `<img src="${row.image_url}" width="75px;" alt="프레임 이미지"/>`;
          },
          "targets": 2
        },
        {
          "className": "td-center",
          "render": function (data, type, row) {
            return `<button class="btn mb-0 mr-0 waves-effect waves-light btn-success" onclick="deleteMapping('${row.unit_sticker_seq}', '${unit_sticker_filter_seq}')">삭제</button>`;
          },
          "targets": 3
        },
      ],
    });
  }

  function deleteMapping(unit_sticker_seq, unit_sticker_filter_seq) {

    if (unit_sticker_seq == null || unit_sticker_filter_seq == null) {
      alert("삭제 대상의 정보가 올바르지 않습니다. 관리자에게 문의해주세요.");
      return false;
    }

    $.ajax({
      type: "DELETE",
      url: `${admin_api_url}/units/stickers/filters/set/${unit_sticker_seq}/${unit_sticker_filter_seq}`,
      success: function () {
        $('.unitStickerList').DataTable().ajax.reload(null, false);
        alert("해당 매핑 정보가 삭제되었습니다.");
      },
      error: function (error) {
        alert("매핑 정보 삭제중 오류가 발생했습니다. 관리자에게 문의바랍니다.");
      }
    });

  }

</script>
